# background service after alg done
Edges:
    [
        # twse
        [0,1,1],
        [1,2,1],
        # otc
        [3,4,1],
        [4,5,1],
    ]

Nodes:
    [
        # 0 ignore weekend date.now() - days(3)
        'Loader.parse_task(
            "./routers/tasks/RptDualema.yaml",
            kwargs = {
                "opt": "twse",
                "targets": ["dualema"],
                "starttime": "datetime.utcnow() - timedelta(days=3)",
                "endtime": "datetime.utcnow()",
                "stockids": "[i for i in iddb_tasks[\"twse\"]().stock.get_ids()]",
                "order": "lambda x: [-x.value[\"totalbuys\"], -x.value[\"totalsells\"]]",
                "limit": 10,
                "cfg": {
                    "buf_win": 140,
                    "short_ema_win": 20,
                    "long_ema_win": 40
                }
            }
        )',

        # 1 get detail info
        'Loader.parse_task(
            "./routers/tasks/AlgDualema.yaml",
            kwargs = {
                "opt": "twse",
                "targets": ["dualema"],
                "starttime": "datetime.utcnow() - timedelta(days=150)",
                "endtime": "datetime.utcnow()",
                "stockids": [],
                "order": "lambda x: [-x.value[\"totalbuys\"], -x.value[\"totalsells\"]]",
                "callback": "to_detail",
                "limit": 10,
                "cfg": {
                    "buf_win": 140,
                    "short_ema_win": 20,
                    "long_ema_win": 40
                }
            }
        )',

        # 3
        'Loader.parse_task(
            "./routers/tasks/NtyGmail.yaml",
            kwargs = {
                "opt": "twse",
                "targets": ["gmail"],
                "starttime": "datetime.utcnow() - timedelta(days=1)",
                "endtime": "datetime.utcnow()",
                "stockids": [],
                "limit": 10,
                "cfg": {
                    "subject": "best twse Dualema list ..." 
                }
            }
        )',

       # 0 ignore weekend date.now() - days(3)
        'Loader.parse_task(
            "./routers/tasks/RptDualema.yaml",
            kwargs = {
                "opt": "otc",
                "targets": ["dualema"],
                "starttime": "datetime.utcnow() - timedelta(days=3)",
                "endtime": "datetime.utcnow()",
                "stockids": "[i for i in iddb_tasks[\"otc\"]().stock.get_ids()]",
                "order": "lambda x: [-x.value[\"totalbuys\"], -x.value[\"totalsells\"]]",
                "limit": 10,
                "cfg": {
                    "buf_win": 140,
                    "short_ema_win": 20,
                    "long_ema_win": 40
                }
            }
        )',

        # 1 get detail info
        'Loader.parse_task(
            "./routers/tasks/AlgDualema.yaml",
            kwargs = {
                "opt": "otc",
                "targets": ["dualema"],
                "starttime": "datetime.utcnow() - timedelta(days=150)",
                "endtime": "datetime.utcnow()",
                "stockids": [],
                "order": "lambda x: [-x.value[\"totalbuys\"], -x.value[\"totalsells\"]]",
                "callback": "to_detail",
                "limit": 10,
                "cfg": {
                    "buf_win": 140,
                    "short_ema_win": 20,
                    "long_ema_win": 40
                }
            }
        )',

        # 3
        'Loader.parse_task(
            "./routers/tasks/NtyGmail.yaml",
            kwargs = {
                "opt": "otc",
                "targets": ["gmail"],
                "starttime": "datetime.utcnow() - timedelta(days=1)",
                "endtime": "datetime.utcnow()",
                "stockids": [],
                "limit": 10,
                "cfg": {
                    "subject": "best otc Dualema list ..." 
                }
            }
        )'
    ]