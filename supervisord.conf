[program:rabbitmq]
command=env - HOME="/root" /usr/lib/rabbitmq/bin/rabbitmq-server
directory=/var/lib/rabbitmq
user=root
autostart=true
autorestart=true
priority=10
redirect_stderr=true
stdout_logfile=/var/log/rabbitmq/rabbitmq-server.log
environment=HOME=/root


[program:celery]
command=celery -A giant worker -B -l info -c 4 
directory=./
stdout_logfile=./log/celery/worker.log
stderr_logfile=./log/celery/worker.log
user=root
numprocs=4
autostart=true
autorestart=true
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true

; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998


[program:mongod]
command=mongod --dbpath tmp --nojournal 
stdout_logfile=./log/mongod/db.log
stderr_logfile=./log/mongod/db.log
user=root
autostart=true
autorestart=true
redirect_stderr=true


[program:django]
environment = 
    SITE=domain1,
    DJANGO_SETTINGS_MODULE = foo.settings.local,
    DB_USER=foo,
    DB_PASS=bar,
export SITE_ID=559935669b93873f0273aa06 # after python manage.py tellsiteid
export GMAIL_ACCOUNT=
export GMAIL_PASSWD=
export LINE_ACCOUNT=
export LINE_PASSWD=
export DJANGO_SETTINGS_MODULE=giant.settings 
export DJANGO_PROJECT_DIR=`pwd`
export C_FORCE_ROOT=true
command = python manage.py command